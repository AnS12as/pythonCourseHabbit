version: '3.8'

services:
  web:
    build: .
    container_name: web
    restart: always
    env_file:
      - .env
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DATABASE_NAME=${DB_NAME}
      - DATABASE_USER=${DB_USER}
      - DATABASE_PASSWORD=${DB_PASSWORD}
      - DATABASE_HOST=db
      - DATABASE_PORT=${DB_PORT}
      - REDIS_URL=${REDIS_URL}
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    volumes:
      - .:/code
      - static_volume:/code/static
    command: >
      bash -c "/app/wait-for-it.sh db 5432 --timeout=30 &&
               python manage.py migrate &&
               python manage.py collectstatic --noinput &&
               gunicorn habit_tracker.wsgi:application --bind 0.0.0.0:8000"

  db:
    image: postgres:16
    container_name: db
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:6
    container_name: redis
    restart: always
    ports:
      - "6379:6379"

  celery:
    build: .
    container_name: celery
    restart: always
    depends_on:
      - redis
      - db
    env_file:
      - .env
    command: >
      celery -A habit_tracker worker --loglevel=info

  celery_beat:
    build: .
    container_name: celery_beat
    restart: always
    depends_on:
      - redis
      - db
    env_file:
      - .env
    command: >
      celery -A habit_tracker beat --loglevel=info

volumes:
  postgres_data:
  static_volume:


